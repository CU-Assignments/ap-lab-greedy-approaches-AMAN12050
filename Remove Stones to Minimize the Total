class Solution {
public:
    int minStoneSum(vector<int>& piles, int k) {
       priority_queue<int> maxHeap(piles.begin(), piles.end());

        // Perform k operations
        while (k-- > 0) {
            int largest = maxHeap.top();
            maxHeap.pop();
            largest -= largest / 2; // Remove floor(largest/2) stones
            maxHeap.push(largest);
        }

        // Calculate remaining stones
        int totalSum = 0;
        while (!maxHeap.empty()) {
            totalSum += maxHeap.top();
            maxHeap.pop();
        }

        return totalSum;  
    }
};
