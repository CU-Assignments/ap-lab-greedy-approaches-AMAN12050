class Solution {
public:
    int maximumUnits(vector<vector<int>>& boxTypes, int truckSize) {
         sort(boxTypes.begin(), boxTypes.end(), [](const vector<int>& a, const vector<int>& b) {
            return a[1] > b[1]; // Sort by number of units per box in descending order
        });

        int maxUnits = 0;

        for (const auto& box : boxTypes) {
            int numBoxes = box[0];
            int unitsPerBox = box[1];

            // Take the minimum of available boxes or remaining truck space
            int boxesToTake = min(truckSize, numBoxes);

            // Add units from the selected boxes
            maxUnits += boxesToTake * unitsPerBox;

            // Decrease the available truck size
            truckSize -= boxesToTake;

            // If the truck is full, break
            if (truckSize == 0) break;
        }

        return maxUnits;
    }
};
